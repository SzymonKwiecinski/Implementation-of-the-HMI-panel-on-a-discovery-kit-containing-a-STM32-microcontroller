/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MAIN_VIEW_BASE_HPP
#define MAIN_VIEW_BASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/main_screen/MainPresenter.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/Slider.hpp>

class MainViewBase : public touchgfx::View<MainPresenter>
{
public:
    MainViewBase();
    virtual ~MainViewBase() {}

    virtual void setupScreen();

    /*
     * Custom Action Handlers
     */
    virtual void buttonUpVirtualFunction()
    {
        // Override and implement this function in MainView
    }

    virtual void buttonDownVirtualFunction()
    {
        // Override and implement this function in MainView
    }

    virtual void buttonLeftVirtualFunction()
    {
        // Override and implement this function in MainView
    }

    virtual void buttonRightVirtualFunction()
    {
        // Override and implement this function in MainView
    }

    virtual void buttonStopVirtualFunction()
    {
        // Override and implement this function in MainView
    }

    virtual void buttonRightRotationVirtualFunction()
    {
        // Override and implement this function in MainView
    }

    virtual void buttonLeftRotationVirtualFunction()
    {
        // Override and implement this function in MainView
    }

    virtual void sliderVirtualFunction(int value)
    {
        // Override and implement this function in MainView
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Image imageBackground;
    touchgfx::Button buttonUp;
    touchgfx::Button buttonLeft;
    touchgfx::Button buttonRight;
    touchgfx::Button buttonDown;
    touchgfx::TextAreaWithOneWildcard textArea;
    touchgfx::Button buttonStop;
    touchgfx::Button buttonLeftRotation;
    touchgfx::Button buttonRightRoration;
    touchgfx::Slider slider;
    touchgfx::TextAreaWithOneWildcard textAreaSlider;
    touchgfx::TextAreaWithOneWildcard textAreaEncoderFR;
    touchgfx::TextAreaWithOneWildcard textAreaEncoderFL;
    touchgfx::TextAreaWithOneWildcard textAreaEncoderRL;
    touchgfx::TextAreaWithOneWildcard textAreaEncoderRR;
    touchgfx::Image ikony_wlasne21;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textAreaBuffer[TEXTAREA_SIZE];
    static const uint16_t TEXTAREASLIDER_SIZE = 5;
    touchgfx::Unicode::UnicodeChar textAreaSliderBuffer[TEXTAREASLIDER_SIZE];
    static const uint16_t TEXTAREAENCODERFR_SIZE = 6;
    touchgfx::Unicode::UnicodeChar textAreaEncoderFRBuffer[TEXTAREAENCODERFR_SIZE];
    static const uint16_t TEXTAREAENCODERFL_SIZE = 6;
    touchgfx::Unicode::UnicodeChar textAreaEncoderFLBuffer[TEXTAREAENCODERFL_SIZE];
    static const uint16_t TEXTAREAENCODERRL_SIZE = 6;
    touchgfx::Unicode::UnicodeChar textAreaEncoderRLBuffer[TEXTAREAENCODERRL_SIZE];
    static const uint16_t TEXTAREAENCODERRR_SIZE = 6;
    touchgfx::Unicode::UnicodeChar textAreaEncoderRRBuffer[TEXTAREAENCODERRR_SIZE];

private:

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void sliderValueConfirmedCallbackHandler(const touchgfx::Slider& src, int value);

    /*
     * Callback Declarations
     */
    touchgfx::Callback<MainViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<MainViewBase, const touchgfx::Slider&, int> sliderValueConfirmedCallback;

};

#endif // MAIN_VIEW_BASE_HPP
