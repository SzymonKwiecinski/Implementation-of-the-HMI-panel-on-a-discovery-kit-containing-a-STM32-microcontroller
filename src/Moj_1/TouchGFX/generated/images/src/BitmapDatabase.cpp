// -alpha_dither yes -dither 2 -non_opaque_image_format ARGB8888 -opaque_image_format RGB565 0x8313d073
// Generated by imageconverter. Please, do not edit!

#include <touchgfx/Bitmap.hpp>
#include <BitmapDatabase.hpp>

#ifndef NO_USING_NAMESPACE_TOUCHGFX
using namespace touchgfx;
#endif

extern const unsigned char _Down_arrow[];
extern const unsigned char _Down_arrow_pressed[];
extern const unsigned char _Round_Edge_icon_button_pressed_stop[];
extern const unsigned char _Round_Edge_icon_button_stop[];
extern const unsigned char _Round_left_rotation[];
extern const unsigned char _Round_left_rotation_pressed[];
extern const unsigned char _Round_right_rotation[];
extern const unsigned char _Round_right_rotation_pressed[];
extern const unsigned char _Up_arrow[];
extern const unsigned char _Up_arrow_pressed[];
extern const unsigned char _background[];
extern const unsigned char _blue_slider_vertical_small_indicators_slider3_vertical_nob[];
extern const unsigned char _blue_slider_vertical_small_slider3_vertical_back[];
extern const unsigned char _blue_slider_vertical_small_slider3_vertical_fill[];
extern const unsigned char _button_down_disabled[];
extern const unsigned char _button_down_pressed[];
extern const unsigned char _button_down_released[];
extern const unsigned char _button_left_disabled[];
extern const unsigned char _button_left_pressed[];
extern const unsigned char _button_left_released[];
extern const unsigned char _button_right_disabled[];
extern const unsigned char _button_right_pressed[];
extern const unsigned char _button_right_released[];
extern const unsigned char _button_up_disabled[];
extern const unsigned char _button_up_pressed[];
extern const unsigned char _button_up_released[];
extern const unsigned char _counter_box[];
extern const unsigned char _ikony_wlasne[];
extern const unsigned char _ikony_wlasne2[];

const touchgfx::Bitmap::BitmapData bitmap_database[] =
{
    { _Down_arrow, 0, 32, 19, 12, 10, 8, 4, touchgfx::Bitmap::ARGB8888 },
    { _Down_arrow_pressed, 0, 32, 19, 12, 10, 8, 4, touchgfx::Bitmap::ARGB8888 },
    { _Round_Edge_icon_button_pressed_stop, 0, 121, 61, 15, 7, 92, 46, touchgfx::Bitmap::ARGB8888 },
    { _Round_Edge_icon_button_stop, 0, 121, 61, 14, 7, 92, 46, touchgfx::Bitmap::ARGB8888 },
    { _Round_left_rotation, 0, 60, 60, 12, 11, 34, 36, touchgfx::Bitmap::ARGB8888 },
    { _Round_left_rotation_pressed, 0, 60, 60, 12, 11, 34, 36, touchgfx::Bitmap::ARGB8888 },
    { _Round_right_rotation, 0, 60, 61, 13, 11, 34, 36, touchgfx::Bitmap::ARGB8888 },
    { _Round_right_rotation_pressed, 0, 60, 61, 13, 11, 34, 36, touchgfx::Bitmap::ARGB8888 },
    { _Up_arrow, 0, 32, 19, 12, 3, 8, 4, touchgfx::Bitmap::ARGB8888 },
    { _Up_arrow_pressed, 0, 32, 19, 12, 3, 8, 4, touchgfx::Bitmap::ARGB8888 },
    { _background, 0, 480, 272, 0, 0, 480, 272, touchgfx::Bitmap::RGB565 },
    { _blue_slider_vertical_small_indicators_slider3_vertical_nob, 0, 34, 54, 2, 1, 30, 50, touchgfx::Bitmap::ARGB8888 },
    { _blue_slider_vertical_small_slider3_vertical_back, 0, 20, 172, 0, 0, 20, 172, touchgfx::Bitmap::RGB565 },
    { _blue_slider_vertical_small_slider3_vertical_fill, 0, 20, 172, 0, 0, 20, 172, touchgfx::Bitmap::RGB565 },
    { _button_down_disabled, 0, 130, 56, 3, 0, 124, 55, touchgfx::Bitmap::ARGB8888 },
    { _button_down_pressed, 0, 130, 56, 3, 0, 124, 55, touchgfx::Bitmap::ARGB8888 },
    { _button_down_released, 0, 130, 56, 3, 0, 124, 55, touchgfx::Bitmap::ARGB8888 },
    { _button_left_disabled, 0, 56, 130, 1, 3, 55, 124, touchgfx::Bitmap::ARGB8888 },
    { _button_left_pressed, 0, 56, 130, 1, 3, 55, 124, touchgfx::Bitmap::ARGB8888 },
    { _button_left_released, 0, 56, 130, 1, 3, 55, 124, touchgfx::Bitmap::ARGB8888 },
    { _button_right_disabled, 0, 56, 130, 0, 3, 55, 124, touchgfx::Bitmap::ARGB8888 },
    { _button_right_pressed, 0, 56, 130, 0, 3, 55, 124, touchgfx::Bitmap::ARGB8888 },
    { _button_right_released, 0, 56, 130, 0, 3, 55, 124, touchgfx::Bitmap::ARGB8888 },
    { _button_up_disabled, 0, 130, 56, 3, 0, 124, 55, touchgfx::Bitmap::ARGB8888 },
    { _button_up_pressed, 0, 130, 56, 3, 0, 124, 55, touchgfx::Bitmap::ARGB8888 },
    { _button_up_released, 0, 130, 56, 3, 0, 124, 55, touchgfx::Bitmap::ARGB8888 },
    { _counter_box, 0, 152, 154, 0, 0, 152, 154, touchgfx::Bitmap::RGB565 },
    { _ikony_wlasne, 0, 59, 84, 0, 0, 0, 0, touchgfx::Bitmap::ARGB8888 },
    { _ikony_wlasne2, 0, 44, 78, 6, 33, 32, 21, touchgfx::Bitmap::ARGB8888 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
}

